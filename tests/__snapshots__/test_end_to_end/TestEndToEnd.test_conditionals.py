import datetime
from lineapy.data.types import *
from lineapy.utils import get_new_id

session = SessionContext(
    id=get_new_id(),
    environment_type=SessionType.SCRIPT,
    creation_time=datetime.datetime(1, 1, 1, 0, 0),
    file_name="[source file path]",
    code='bs = [1,2]\nif len(bs) > 4:\n    print("True")\nelse:\n    bs.append(3)\n    print("False")\n',
    working_directory="dummy_linea_repo/",
    libraries=[],
)
call_2 = CallNode(
    id=get_new_id(),
    session_id=session.id,
    lineno=2,
    col_offset=0,
    end_lineno=6,
    end_col_offset=18,
    arguments=[
        ArgumentNode(
            id=get_new_id(),
            session_id=session.id,
            keyword="bs",
            value_node_id=VariableNode(
                id=get_new_id(),
                session_id=session.id,
                source_node_id=CallNode(
                    id=get_new_id(),
                    session_id=session.id,
                    lineno=1,
                    col_offset=0,
                    end_lineno=1,
                    end_col_offset=10,
                    arguments=[
                        ArgumentNode(
                            id=get_new_id(),
                            session_id=session.id,
                            positional_order=0,
                            value_node_id=LiteralNode(
                                id=get_new_id(),
                                session_id=session.id,
                                lineno=1,
                                col_offset=6,
                                end_lineno=1,
                                end_col_offset=7,
                                value=1,
                            ).id,
                        ).id,
                        ArgumentNode(
                            id=get_new_id(),
                            session_id=session.id,
                            positional_order=1,
                            value_node_id=LiteralNode(
                                id=get_new_id(),
                                session_id=session.id,
                                lineno=1,
                                col_offset=8,
                                end_lineno=1,
                                end_col_offset=9,
                                value=2,
                            ).id,
                        ).id,
                    ],
                    function_id=LookupNode(
                        id=get_new_id(),
                        session_id=session.id,
                        name="__build_list__",
                    ).id,
                ).id,
                assigned_variable_name="bs",
            ).id,
        ).id,
        ArgumentNode(
            id=get_new_id(),
            session_id=session.id,
            keyword="len",
            value_node_id=LookupNode(
                id=get_new_id(),
                session_id=session.id,
                name="len",
            ).id,
        ).id,
        ArgumentNode(
            id=get_new_id(),
            session_id=session.id,
            keyword="print",
            value_node_id=LookupNode(
                id=get_new_id(),
                session_id=session.id,
                name="print",
            ).id,
        ).id,
        ArgumentNode(
            id=get_new_id(),
            session_id=session.id,
            positional_order=0,
            value_node_id=LiteralNode(
                id=get_new_id(),
                session_id=session.id,
                value='if len(bs) > 4:\n    print("True")\nelse:\n    bs.append(3)\n    print("False")',
            ).id,
        ).id,
        ArgumentNode(
            id=get_new_id(),
            session_id=session.id,
            positional_order=1,
            value_node_id=LiteralNode(
                id=get_new_id(),
                session_id=session.id,
                value=0,
            ).id,
        ).id,
    ],
    function_id=LookupNode(
        id=get_new_id(),
        session_id=session.id,
        name="__exec__",
    ).id,
)
